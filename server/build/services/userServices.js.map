{"version":3,"sources":["../../services/userServices.js"],"names":["UserService","users","id","firstName","lastName","email","password","map","data","user","User","allUser","fetchAll","newUser","length","push","foundUser","find"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;IAEqBA,W;;;;;;;;;+BACR;AACT,WAAKC,KAAL,GAAa,CACX;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,SAAS,EAAE,OAFb;AAGEC,QAAAA,QAAQ,EAAE,OAHZ;AAIEC,QAAAA,KAAK,EAAE,oBAJT;AAKEC,QAAAA,QAAQ,EAAE;AALZ,OADW,CAAb;AASA,aAAO,KAAKL,KAAL,CAAWM,GAAX,CAAe,UAACC,IAAD,EAAU;AAC9B,YAAMC,IAAI,GAAG,IAAIC,aAAJ,EAAb;AACAD,QAAAA,IAAI,CAACP,EAAL,GAAUM,IAAI,CAACN,EAAf;AACAO,QAAAA,IAAI,CAACN,SAAL,GAAiBK,IAAI,CAACL,SAAtB;AACAM,QAAAA,IAAI,CAACL,QAAL,GAAgBI,IAAI,CAACJ,QAArB;AACAK,QAAAA,IAAI,CAACJ,KAAL,GAAaG,IAAI,CAACH,KAAlB;AACAI,QAAAA,IAAI,CAACH,QAAL,GAAgBE,IAAI,CAACF,QAArB;AACA,eAAOG,IAAP;AACD,OARM,CAAP;AASD;;;+BAEUD,I,EAAM;AACf,UAAMG,OAAO,GAAG,KAAKC,QAAL,EAAhB;;AACA,UAAMC,OAAO;AAAKX,QAAAA,EAAE,EAAES,OAAO,CAACG,MAAR,GAAiB;AAA1B,SAAgCN,IAAhC,CAAb;;AACAG,MAAAA,OAAO,CAACI,IAAR,CAAaF,OAAb;AACA,aAAOA,OAAP;AACD;;;8BAESL,I,EAAM;AACd,UAAMC,IAAI,GAAG,KAAKG,QAAL,GAAgB,CAAhB,CAAb;;AAEA,UAAIJ,IAAI,CAACH,KAAL,KAAeI,IAAI,CAACJ,KAAxB,EAA+B;AAC7B,eAAO,sBAAP;AACD;;AACD,UAAIG,IAAI,CAACF,QAAL,KAAkBG,IAAI,CAACH,QAA3B,EAAqC;AACnC,eAAO,kBAAP;AACD;;AACD,aAAOG,IAAP;AACD;;;oCAEeJ,K,EAAO;AACrB,UAAMJ,KAAK,GAAG,KAAKW,QAAL,EAAd;AACA,UAAMI,SAAS,GAAGf,KAAK,CAACgB,IAAN,CAAW,UAACR,IAAD;AAAA,eAAUA,IAAI,CAACJ,KAAL,IAAcA,KAAxB;AAAA,OAAX,CAAlB;;AACA,UAAI,CAACW,SAAL,EAAgB;AACd,eAAO,OAAP;AACD;;AACD,aAAOA,SAAP;AACD","sourcesContent":["import User from '../models/User';\n\nexport default class UserService {\n  fetchAll() {\n    this.users = [\n      {\n        id: 1,\n        firstName: 'Tunde',\n        lastName: 'Nasri',\n        email: 'superuser@mail.com',\n        password: 'secret',\n      },\n    ];\n    return this.users.map((data) => {\n      const user = new User();\n      user.id = data.id;\n      user.firstName = data.firstName;\n      user.lastName = data.lastName;\n      user.email = data.email;\n      user.password = data.password;\n      return user;\n    });\n  }\n\n  createUser(data) {\n    const allUser = this.fetchAll();\n    const newUser = { id: allUser.length + 1, ...data };\n    allUser.push(newUser);\n    return newUser;\n  }\n\n  loginUser(data) {\n    const user = this.fetchAll()[0];\n\n    if (data.email !== user.email) {\n      return 'Email already in use';\n    }\n    if (data.password !== user.password) {\n      return 'Invalid password';\n    }\n    return user;\n  }\n\n  findUserByEmail(email) {\n    const users = this.fetchAll();\n    const foundUser = users.find((user) => user.email == email);\n    if (!foundUser) {\n      return 'error';\n    }\n    return foundUser;\n  }\n}\n"],"file":"userServices.js"}