{"version":3,"sources":["../../services/userServices.js"],"names":["UserService","users","id","firstName","lastName","email","password","map","data","user","User","allUser","foundUser","find","element","newUser","length","push"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;IAEqBA,W;;;AACnB,yBAAc;AAAA;;AACZ,SAAKC,KAAL,GAAa,CACX;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,SAAS,EAAE,OAFb;AAGEC,MAAAA,QAAQ,EAAE,OAHZ;AAIEC,MAAAA,KAAK,EAAE,oBAJT;AAKEC,MAAAA,QAAQ,EAAE;AALZ,KADW,CAAb;AASD;;;;+BAEU;AACT,aAAO,KAAKL,KAAL,CAAWM,GAAX,CAAe,UAACC,IAAD,EAAU;AAC9B,YAAMC,IAAI,GAAG,IAAIC,aAAJ,EAAb;AACAD,QAAAA,IAAI,CAACP,EAAL,GAAUM,IAAI,CAACN,EAAf;AACAO,QAAAA,IAAI,CAACN,SAAL,GAAiBK,IAAI,CAACL,SAAtB;AACAM,QAAAA,IAAI,CAACL,QAAL,GAAgBI,IAAI,CAACJ,QAArB;AACAK,QAAAA,IAAI,CAACJ,KAAL,GAAaG,IAAI,CAACH,KAAlB;AACAI,QAAAA,IAAI,CAACH,QAAL,GAAgBE,IAAI,CAACF,QAArB;AACA,eAAOG,IAAP;AACD,OARM,CAAP;AASD;;;+BAEUD,I,EAAM;AACf,UAAMG,OAAO,GAAG,KAAKV,KAArB;AACA,UAAMW,SAAS,GAAG,KAAKX,KAAL,CAAWY,IAAX,CAAgB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACT,KAAR,IAAiBG,IAAI,CAACH,KAA1B;AAAA,OAAvB,CAAlB;;AACA,UAAIO,SAAJ,EAAe;AACb,eAAO,sBAAP;AACD;;AACD,UAAMG,OAAO;AAAKb,QAAAA,EAAE,EAAES,OAAO,CAACK,MAAR,GAAiB;AAA1B,SAAgCR,IAAhC,CAAb;;AACAG,MAAAA,OAAO,CAACM,IAAR,CAAaF,OAAb;AACA,aAAOA,OAAP;AACD;;;8BAESP,I,EAAM;AACd,UAAMI,SAAS,GAAG,KAAKX,KAAL,CAAWY,IAAX,CAAgB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACT,KAAR,IAAiBG,IAAI,CAACH,KAA1B;AAAA,OAAvB,CAAlB;;AACA,UAAI,CAACO,SAAL,EAAgB;AACd,eAAO,SAAP;AACD;;AACD,UAAIA,SAAS,CAACN,QAAV,KAAuBE,IAAI,CAACF,QAAhC,EAA0C;AACxC,eAAO,kBAAP;AACD;;AACD,aAAOM,SAAP;AACD;;;oCAEeP,K,EAAO;AACrB,UAAMO,SAAS,GAAG,KAAKX,KAAL,CAAWY,IAAX,CAAgB,UAACJ,IAAD;AAAA,eAAUA,IAAI,CAACJ,KAAL,IAAcA,KAAxB;AAAA,OAAhB,CAAlB;;AACA,UAAI,CAACO,SAAL,EAAgB;AACd,eAAO,OAAP;AACD;;AACD,aAAOA,SAAP;AACD","sourcesContent":["import User from '../models/User';\n\nexport default class UserService {\n  constructor() {\n    this.users = [\n      {\n        id: 1,\n        firstName: 'Tunde',\n        lastName: 'Nasri',\n        email: 'superuser@mail.com',\n        password: 'secret',\n      },\n    ];\n  }\n\n  fetchAll() {\n    return this.users.map((data) => {\n      const user = new User();\n      user.id = data.id;\n      user.firstName = data.firstName;\n      user.lastName = data.lastName;\n      user.email = data.email;\n      user.password = data.password;\n      return user;\n    });\n  }\n\n  createUser(data) {\n    const allUser = this.users;\n    const foundUser = this.users.find(element => element.email == data.email);\n    if (foundUser) {\n      return 'EMAIL ALREADY IN USE';\n    }\n    const newUser = { id: allUser.length + 1, ...data };\n    allUser.push(newUser);\n    return newUser;\n  }\n\n  loginUser(data) {\n    const foundUser = this.users.find(element => element.email == data.email);\n    if (!foundUser) {\n      return 'NO USER';\n    }\n    if (foundUser.password !== data.password) {\n      return 'Invalid password';\n    }\n    return foundUser;\n  }\n\n  findUserByEmail(email) {\n    const foundUser = this.users.find((user) => user.email == email);\n    if (!foundUser) {\n      return 'error';\n    }\n    return foundUser;\n  }\n}\n"],"file":"userServices.js"}