{"version":3,"sources":["../../controllers/messageControllers.js"],"names":["messageServices","MessageService","exports","postMessage","req","res","body","subject","message","send","status","error","data","getReceivedMessages","messages","getReceivedMessage","getSentMessages","getMessageById","params","id","deleteById","deleteMessage","getUnreadMessages"],"mappings":"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","sourcesContent":["import MessageService from '../services/messageServices';\n\nconst messageServices = new MessageService();\n\nexports.postMessage = (req, res) => {\n  const { subject, message } = req.body;\n  if (!subject || !message) {\n    return res.send({\n      status: 400,\n      error: 'Please input all the required data',\n    });\n  }\n  const postMessage = messageServices.postMessage(req.body);\n  if (postMessage == 'NOT FOUND') {\n    return res.send({\n      status: 404,\n      error: 'Email not found',\n    });\n  }\n  return res.send({\n    status: 201,\n    data: postMessage,\n  });\n};\n\nexports.getReceivedMessages = (req, res) => {\n  const messages = messageServices.getReceivedMessage();\n  res.send({\n    status: 200,\n    data: messages,\n  });\n};\n\nexports.getSentMessages = (req, res) => {\n  const messages = messageServices.getSentMessages();\n  res.send({\n    status: 200,\n    data: messages,\n  });\n};\n\nexports.getMessageById = (req, res) => {\n  const message = messageServices.getMessageById(req.params.id);\n  if (message === 'error') {\n    return res.send({\n      status: 400,\n      error: 'No message with that id found',\n    });\n  }\n  return res.send({\n    status: 200,\n    data: message,\n  });\n};\n\nexports.deleteById = (req, res) => {\n  const message = messageServices.deleteMessage(req.params.id);\n  if (message === 'error') {\n    return res.send({\n      status: 400,\n      error: 'No message with that id found',\n    });\n  }\n  return res.send({\n    status: 200,\n    data: {\n      message: 'Message deleted successfully',\n    },\n  });\n};\n\nexports.getUnreadMessages = (req, res) => {\n  const messages = messageServices.getUnreadMessages();\n  return res.send({\n    status: 200,\n    data: messages,\n  });\n};\n"],"file":"messageControllers.js"}