{"version":3,"sources":["../app.js"],"names":["require","config","app","swaggerDefinition","info","title","version","description","host","basePath","options","apis","swaggerSpec","get","req","res","sendFile","path","join","__dirname","use","express","json","urlencoded","extended","setHeader","send","userRoutes","messageRoutes","groupRoutes","redirect","PORT","process","env","listen","console","log","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,GAAG,GAAG,uBAAZ,C,CAEA;;AACA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,WADH;AAEJC,IAAAA,OAAO,EAAE,OAFL;AAGJC,IAAAA,WAAW,EAAE;AAHT,GADkB;AAMxBC,EAAAA,IAAI,EAAE,8CANkB;AAOxBC,EAAAA,QAAQ,EAAE;AAPc,CAA1B,C,CAUA;;AACA,IAAMC,OAAO,GAAG;AACd;AACAP,EAAAA,iBAAiB,EAAjBA,iBAFc;AAGd;AACAQ,EAAAA,IAAI,EAAE,CAAC,sBAAD;AAJQ,CAAhB,C,CAOA;;AACA,IAAMC,WAAW,GAAG,2BAAaF,OAAb,CAApB;AAEAR,GAAG,CAACW,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BA,EAAAA,GAAG,CAACC,QAAJ,CAAaC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAb;AACD,CAFD;AAIAjB,GAAG,CAACkB,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AACApB,GAAG,CAACkB,GAAJ,CAAQC,iBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAEA;;AACAtB,GAAG,CAACW,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrCA,EAAAA,GAAG,CAACU,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAV,EAAAA,GAAG,CAACW,IAAJ,CAASd,WAAT;AACD,CAHD;AAKAV,GAAG,CAACkB,GAAJ,CAAQ,cAAR,EAAwBO,mBAAxB;AACAzB,GAAG,CAACkB,GAAJ,CAAQ,kBAAR,EAA4BQ,sBAA5B;AACA1B,GAAG,CAACkB,GAAJ,CAAQ,gBAAR,EAA0BS,oBAA1B;AAEA3B,GAAG,CAACW,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACe,QAAJ,CAAa,OAAb;AACD,CAFD;AAIA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA7B,GAAG,CAACgC,MAAJ,CAAWH,IAAX,EAAiB,YAAM;AACrBI,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBpC,GAAjB","sourcesContent":["import express from 'express';\nimport swaggerJSDoc from 'swagger-jsdoc';\nimport path from 'path';\nimport userRoutes from './routes/userRoutes';\nimport messageRoutes from './routes/messageRoutes';\nimport groupRoutes from './routes/groupRoutes';\n\nrequire('dotenv').config();\n\nconst app = express();\n\n// swagger definition\nconst swaggerDefinition = {\n  info: {\n    title: 'Epic Mail',\n    version: '1.0.0',\n    description: 'Exchange message/information',\n  },\n  host: 'https://intense-thicket-60071.herokuapp.com/',\n  basePath: '/',\n};\n\n// options for the swagger docs\nconst options = {\n  // import swaggerDefinitions\n  swaggerDefinition,\n  // path to the API docs\n  apis: ['./server/routes/*.js'],\n};\n\n// initialize swagger-jsdoc\nconst swaggerSpec = swaggerJSDoc(options);\n\napp.get('/docs', (req, res) => {\n  res.sendFile(path.join(__dirname, 'redoc.html'));\n});\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// serve swagger\napp.get('/swagger.json', (req, res) => {\n  res.setHeader('Content-Type', 'application/json');\n  res.send(swaggerSpec);\n});\n\napp.use('/api/v1/auth', userRoutes);\napp.use('/api/v1/messages', messageRoutes);\napp.use('/api/v1/groups', groupRoutes);\n\napp.get('/', (req, res) => {\n  res.redirect('/docs');\n});\n\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log('server has started');\n});\n\nmodule.exports = app;\n"],"file":"app.js"}