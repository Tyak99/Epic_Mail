{"version":3,"sources":["../../routes/messageRoutes.js"],"names":["router","express","Router","post","messageController","postMessage","get","getReceivedMessages","getSentMessages","getUnreadMessages","getMessageById","delete","deleteById"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;AAGA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBAF,MAAM,CAACG,IAAP,CAAY,GAAZ,EAAiBC,4BAAkBC,WAAnC;AACAL,MAAM,CAACM,GAAP,CAAW,GAAX,EAAgBF,4BAAkBG,mBAAlC;AACAP,MAAM,CAACM,GAAP,CAAW,OAAX,EAAoBF,4BAAkBI,eAAtC;AACAR,MAAM,CAACM,GAAP,CAAW,SAAX,EAAsBF,4BAAkBK,iBAAxC;AACAT,MAAM,CAACM,GAAP,CAAW,MAAX,EAAmBF,4BAAkBM,cAArC;AACAV,MAAM,CAACW,MAAP,CAAc,MAAd,EAAsBP,4BAAkBQ,UAAxC;eACeZ,M","sourcesContent":["import express from 'express';\nimport messageController from '../controllers/messageControllers';\n\nconst router = express.Router();\n\n\n/**\n * @swagger\n * definitions:\n *   Message:\n *     properties:\n *       subject:\n *         type: string\n *       message:\n *         type: string\n *       status:\n *         type: string\n *       createdOn:\n *         type: string\n *       senderId:\n *         type: integer\n *       receiverId:\n *         type: integer\n *       parentMessageId:\n *         type: integer\n */\n\n/**\n * @swagger\n * definitions:\n *   PostMessage:\n *     properties:\n *       subject:\n *         type: string\n *       message:\n *         type: string\n *       senderId:\n *         type: integer\n *       emailTo:\n *         type: string\n */\n\n/**\n * @swagger\n * /api/v1/messages:\n *   get:\n *     summary: Get all received messages\n *     description: Returns a list of user's received emails\n *     tags:\n *       - Messages\n *     responses:\n *       200:\n *         description: An array of received messages\n *         schema:\n *           $ref: '#/definitions/Message'\n */\n\n/**\n * @swagger\n * /api/v1/messages:\n *   post:\n *     tags:\n *       - Messages\n *     description: Send an email to an individual\n *     produces:\n *       - application/json\n *     parameters:\n *       - name: message\n *         description: message object\n *         in: body\n *         required: true\n *         schema:\n *           $ref: '#/definitions/PostMessage'\n *     responses:\n *       201:\n *         description: Successfully created\n *       400:\n *         description: Please input all the required data\n *       404:\n *         description: Email not found\n */\n\n/**\n * @swagger\n * /api/v1/messages/sent:\n *   get:\n *     summary: Get all sent messages\n *     description: Returns a list of user's sent emails\n *     tags:\n *       - Messages\n *     responses:\n *       200:\n *         description: An array of sent messages\n *         schema:\n *           $ref: '#/definitions/Message'\n */\n\n/**\n * @swagger\n * /api/v1/messages/unread:\n *   get:\n *     summary: Get all user's unread messages\n *     description: Returns a list of user's unread emails\n *     tags:\n *       - Messages\n *     responses:\n *       200:\n *         description: An array of unread messages\n *         schema:\n *           $ref: '#/definitions/Message'\n */\n\n/**\n * @swagger\n * /api/v1/messages/{id}:\n *   get:\n *     tags:\n *       - Messages\n *     description: Returns a single user's message\n *     produces:\n *       - application/json\n *     parameters:\n *       - name: id\n *         description: Message's id\n *         in: path\n *         required: true\n *         type: integer\n *     responses:\n *       200:\n *         description: A single message\n *         schema:\n *           $ref: '#/definitions/Message'\n */\n\n/**\n * @swagger\n * /api/v1/messages/{id}:\n *   delete:\n *     tags:\n *       - Messages\n *     description: Deletes a single message\n *     produces:\n *       - application/json\n *     parameters:\n *       - name: id\n *         description: Message's id\n *         in: path\n *         required: true\n *         type: integer\n *     responses:\n *       200:\n *         description: Message Successfully deleted\n *       400:\n *         description: No message with that id found\n *       404:\n *         description: No id present to locate resource\n */\n\nrouter.post('/', messageController.postMessage);\nrouter.get('/', messageController.getReceivedMessages);\nrouter.get('/sent', messageController.getSentMessages);\nrouter.get('/unread', messageController.getUnreadMessages);\nrouter.get('/:id', messageController.getMessageById);\nrouter.delete('/:id', messageController.deleteById);\nexport default router;\n"],"file":"messageRoutes.js"}